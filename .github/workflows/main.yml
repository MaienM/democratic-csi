# https://www.truenas.com/software-status/

name: CI

on:
  push:
    tags:
      - "v*"
    branches:
      - master
      - next

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  build-npm-linux-amd64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - shell: bash
        name: npm install
        run: |
          ci/bin/build.sh
      - name: upload build
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-linux-amd64
          path: node_modules-linux-amd64.tar.gz
          retention-days: 1

  determine-image-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            export GIT_TAG=${GITHUB_REF#refs/tags/}
          else
            export GIT_BRANCH=${GITHUB_REF#refs/heads/}
          fi
          if [[ -n "${GIT_TAG}" ]]; then
            echo "::set-output name=tag::${GIT_TAG}"
          elif [[ -n "${GIT_BRANCH}" ]]; then
            if [[ "${GIT_BRANCH}" == "master" ]]; then
              echo "::set-output name=tag::latest"
            else
              echo "::set-output name=tag::${GIT_BRANCH}"
            fi
          else
            :
          fi

  build-docker-linux:
    permissions:
      contents: read
      packages: write
    needs:
      - determine-image-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: docker build
        run: |
          export ARCH=$([ $(uname -m) = "x86_64" ] && echo "amd64" || echo "arm64")
          mkdir -p ~/.docker/cli-plugins/
          wget -qO ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.8.2/buildx-v0.8.2.linux-${ARCH}
          chmod a+x ~/.docker/cli-plugins/docker-buildx
          docker info
          docker buildx version
          docker buildx ls
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name xbuilder --use
          docker buildx inspect --bootstrap
          .github/bin/docker-release.sh

        env:
          GHCR_USERNAME: ${{ github.repository_owner }}
          GHCR_PASSWORD: ${{ github.token }}
          GHCR_ORG: ${{ github.repository_owner }}
          OBJECTIVEFS_DOWNLOAD_ID: ${{ secrets.OBJECTIVEFS_DOWNLOAD_ID }}
          DOCKER_CLI_EXPERIMENTAL: enabled
          DOCKER_BUILD_PLATFORM: linux/amd64,linux/arm64
          IMAGE_TAG: ${{needs.determine-image-tag.outputs.tag}}
